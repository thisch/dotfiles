#+STARTUP: indent

* Dependencies
** jedi
=yi python-virtualenv=
** Flycheck python dependencies
 install the flake8 tool https://pypi.python.org/pypi/flake8
 and pep8-naming https://github.com/flintwork/pep8-naming
 and pyflakes https://github.com/pyflakes/pyflakes
 verify that all where installed successfully with
 $ flake8 --version
 2.0 (pep8: 1.4.3, pyflakes: 0.6.1, naming: 0.2)
* Key Bindings
** IDO Mode
=S-F11= open recent directories (uses recentf-list)
=F11= open recent files (uses recentf-list)
=F12= dired directory open  (uses thi::directory-list)
*** ido-find-file (C-x C-f)
=C-f= switches to the default find-file interface
(from there =C-m= can be used to open the CWD in dired)
=C-d= open the dired-buffer
** Buffers
*** =C-x left/right= switch buffer
*** =comma [0-9]= comma is evil-leader key
*** =comma qq= other frame (or use awesome =super []=)
*** =comma oo= new frame
** Dired
=C-x C-j= dired jump (jumps to a dired buffer of the directory of the
current file); equivalent to =C-x d RET=
** Function Keys
=F2=
If I'm already in an ansi-term, but it's called "*ansi-term*" rename it.
If I'm already in an ansi-term, but it's called something else, start a new ansi-term called "*ansi-term*"
If I'm in another non-terminal buffer, switch to a buffer called "*ansi-term*" or create a new one if it doesn't exist
=F5= magit grep
=F6= magit status
=F7= open file at cursor
** python development
*** yasnippet python snippets
+ class *suppa*
+ def
+ ifmain
+ for
+ while
+ defm (was ist der unterschied zu def ??)
+ ipdb
*** movement commands
=C-.= jump to definition (jedi)
=C-,= jump back (jedi)
=C-c d= show doc (jedi)
** Buffer management
=C-x left= move to previous buffer (current window)
=C-x right= move to next buffer (current window)
=C-w o= (in normal mode) NOT in emacs mode or insert mode!. delete ALL other windows! does
the same as C-x 1 (which works in all modes)
** evil
=C-w o= (in normal mode) NOT in emacs mode or insert mode!. delete ALL other
windows! does the same as =C-x 1=
=S-*= search symbol under point (also try =M-s .= beginning with emacs 24.4)
** Editing
=M-b M-u= upcase backward word
=M-h= mark paragraph
** Projectile
=C-x f= open file in repository (using fuzzy matching)
=C-c P n= new project
=C-c P f= open existing project
** elisp
emacs-lisp-byte-compile
** flycheck
use customize-group flycheck to customize error display delay
=C-c ! n= move cursor to next error
** gnus
*** =L= goto summary buffer
*** in groups buffer
**** =C-k= remove selected topic -> where does it go???
*** im summary buffer
**** =TAB= wechselt in das msg window (funktioniert auch wenn man nicht vorher RET drückt um das msg window zu öffnen
*** im msg window
**** =q= delete-window
*** composing mails
**** =m= in inbox or group buffers to create a new mail
**** =r= to reply (selected message) plain mail
**** =R= reply including message
** ansi-term
try prefixing actions that aren’t recognized by their standard key commands
with =C-x=. For example, =M-x= becomes =C-x M-x=.

sshing into remote hosts and typing C-c C-f opens the remote CWD using tramp
if bash_profile is configured correctly (http://www.enigmacurry.com/category/emacs/2/)

see description for F2 keybinding
* Key Bindings Graphene Setup
** python flycheck
=C-c ! c= force check of file
=C-c ! l= list errors
=C-c ! p= previous error
=C-c ! n= next error
** sr-speedbar
=f6= toogle
=U= 1 dir up
=C-c s= switch into speedbar window
=C-x o= get out of speedbar window
=D= delete file under point
=right= show file specific information, e.g., list of classes, functions, ..)
** Projectile
=C-c P n= new project
=C-c P f= open existing project
* Integrationtests
** ido flx
*** start emacs and type M-x rb after starting gnus and loading an org file -> revert-buffer is expected
