# https://github.com/ninjaaron/xonsh-quickstart
$AUTO_CD = True
#PROMPT = "#> "
$PROMPT = "{env_name}{BOLD_BLUE} {cwd}{branch_color}{curr_branch: {}}{RESET} {BOLD_BLUE}{prompt_end}{RESET} "
$SHELL_TYPE = 'prompt_toolkit'
# $UPDATE_COMPLETIONS_ON_KEYPRESS = True
$SUPPRESS_BRANCH_TIMEOUT_MESSAGE = True

$XONSH_SHOW_TRACEBACK = True

r"""
completions from history (ghost text) can be selectd using either the
right arrow key or Ctrl-e.

FIXME job-control problems (Ctrl-z Ctrl-\ ... see
https://github.com/xonsh/xonsh/issues/1103
and https://xon.sh/tutorial.html?highlight=pause
"""
aliases['ll'] = "![ls -ahl --color | more]"
aliases['dotf'] = ('cd', '~/gitrepos/dotfiles')
aliases['gr'] = ('cd', '~/gitrepos') # should be superseded by "gr" env
# var
aliases['gs'] = ('git', 'status')
aliases['gg'] = ('git', 'grep')
aliases['gd'] = ('git', 'diff')
aliases['gpl'] = ('git', 'pull')
aliases['gpr'] = ('git', 'pull', '--rebase')
aliases['gps'] = ('git', 'push')
aliases['glu'] = ('git', 'log', '-u')
aliases['src'] = aliases['reload_xonshrc'] = ("source", "~/.xonshrc")
aliases['dnu'] = "sudo aptitude update && sudo aptitude upgrade"
aliases['gk'] = "![gitk --all &]"

# this should supersede aliases['gr'] at some point, but there are some
# issues with autocd that don't make it useable:
# > gr  # raises error (command not found)
# > $gr # only outputs the value of the env var and doesn't cd into it
$gr = "~/gitrepos"

# the zsh history can be imported using the following script
# https://github.com/xonsh/xonsh/issues/1614#issuecomment-483386184

"""
THe only big feature that I miss from xonsh is support for hashed directories.

What are hashed directories?
See https://github.com/fish-shell/fish-shell/issues/1449

There they claim that env vars can also be used

zsh:

~ $ export MYDOTF=~/gitrepos/dotfiles
~ $ MYDOTF # this works because the autocd opt is set
~MYDIFF $ pwd  # it is nice that this even shows the env var in the prompt!!
~/gitrepos/dotfiles
$ ls $MYDOTF/[TAB] # shows all completion candidates (doesn't expand $MYDOTF, which I like!)
$ ls $MYDOTF[TAB] # expands the env var (don't like it)
$ ls ~dotf[TAB]  #doesn't complete the hashed directory, instead it
                 #suggests to select one of the two configured hashed dirs that start with dotf (dotf and dotfp).

Nice!

But in xonsh this doesn't work (not even if $AUTO_CD=True)

$ $mydotf=p"~/gitrepos/dotfiles"
$ mydotf
mydotf: command not found
$ $mydotf
PosixPath('/home/thomas.hisch/gitrepos/dotfiles')

"""

# install fzf-widgets from github
# git clone https://github.com/laloch/xontrib-fzf-widgets
# pip install -e .
xontrib load fzf-widgets
from prompt_toolkit.keys import Keys
$fzf_history_binding = Keys.ControlR
$fzf_ssh_binding = Keys.ControlS
$fzf_file_binding = Keys.ControlT

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
import sys as _sys
from types import ModuleType as _ModuleType
_mod = _ModuleType("xontrib.conda",
                   "Autogenerated from $(/home/thomas.hisch/miniconda3/bin/conda shell.xonsh hook)")
__xonsh__.execer.exec($("/home/thomas.hisch/miniconda3/bin/conda" "shell.xonsh" "hook"),
                      glbs=_mod.__dict__,
                      filename="$(/home/thomas.hisch/miniconda3/bin/conda shell.xonsh hook)")
_sys.modules["xontrib.conda"] = _mod
del _sys, _mod, _ModuleType
# <<< conda initialize <<<
