#!/usr/bin/env python2
from __future__ import print_function

# BEMPP does not support python3

import sys
import os
import pexpect

bdir = os.environ['BEMPP_DIR']
barch = os.environ['BEMPP_ARCH']
print("BEMPP_DIR %s" % bdir)

newdir = os.path.join(bdir, barch)
if not os.path.exists(newdir):
    os.makedirs(newdir)
os.chdir(bdir)

bemppsetup = os.path.expanduser('~/bempp_setup.cfg')
p = pexpect.spawn('python', ['bempp_setup.py', '-b', bemppsetup],
                  timeout=None, logfile=sys.stdout)
line = p.readline()
while line:
    line = p.readline()

p = pexpect.spawn('python', ['bempp_setup.py', '-c', bemppsetup],
                  timeout=None, logfile=sys.stdout)
line = p.readline()
while line:
    line = p.readline()

p = pexpect.spawn('python', ['bempp_setup.py', '-i', 'all', bemppsetup],
                  timeout=None, logfile=sys.stdout)
line = p.readline()
while line:
    line = p.readline()


# bempy = os.path.expandvars('$CONDA_ENV_DIR/$CONDA_DEFAULT_ENV/bempp/python')
bempy = os.path.expandvars('$HOME/bempp/python')
pypacks = ['bempp', 'PyTrilinos']
spdir = os.path.expandvars(
    '$CONDA_ENV_DIR/$CONDA_DEFAULT_ENV/lib/python2.7/site-packages')
print("sitepackages dir %s" % spdir)
print("bem prefix dir %s" % bempy)

# create symbolic links
for x in pypacks:
    srcdir = os.path.join(bempy, x)
    dstdir = os.path.join(spdir, x)
    if os.path.exists(dstdir):
        os.unlink(dstdir)

    print("%s links to %s" % (dstdir, srcdir))
    os.symlink(srcdir, dstdir)
